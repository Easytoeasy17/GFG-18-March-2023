class Solution 
{ 
     public long solve(int n, int []A, int m) {
        int[] arr = new int[2*n+1];
        Arrays.fill(arr, 0);
        long curr = n, tot = 0, ans = 0;
        arr[(int)curr]++;
        for (int i = 0; i < n; i++) {
            int x = -1;
            if (A[i] >= m) {
                x = 1;
            }
            if (x == -1) {
                tot -= arr[(int)(curr+x)];
            } else {
                tot += arr[(int)curr];
            }
            curr += x;
            ans += tot;
            arr[(int)curr]++;
        }
        return ans;
    }
    long countSubarray(int N, int[] A, int M) 
      { 
        // code here
        return solve(N, A, M) - solve(N, A, M+1);
    }
}